-- | Convenience method utilising default fields where applicable.
{% if scope.input | required | listLength == 0 %}
{{ scope.name | lowerFirst }} :: AWS (Either {{ scope.module }}Error {{ scope.name }}Response)
{{ scope.name | lowerFirst }} = undefined $ {{ scope.name }}
  {% for field in scope.input.fields %}
    {% if field.first %}
      {% case field.value.type %}
      {% when "map" %}
    { {{ field.key }} = Map.empty
      {% when "list" %}
    { {{ field.key }} = []
      {% else %}
    { {{ field.key }} = Nothing
      {% endcase %}
    {% else %}
      {% case field.value.type %}
      {% when "map" %}
    , {{ field.key }} = Map.empty
      {% when "list" %}
    , {{ field.key }} = []
      {% else %}
    , {{ field.key }} = Nothing
      {% endcase %}
    {% endif %}
    {% if field.last %}
    }
    {% endif %}
  {% endfor %}
{% else %}
{% if scope.input.fields | mapLength > 0 %}
  {% for field in scope.input | required %}
    {% if field.first %}
{{ scope.name | lowerFirst }} :: {% include "type.ede" with field.value %}
    {% else %}
{{ scope.name | pad }} -> {% include "type.ede" with field.value %}
    {% endif %}
    {% if field.last %}
{{ scope.name | pad }} -> AWS (Either {{ scope.module }}Error {{ scope.name }}Response)
    {% endif %}
  {% endfor %}
{{ scope.name | lowerFirst }} {% for field in scope.input | required -%} p{{ field.index }} {% endfor -%} = undefined $ {{ scope.name }}
  {% for field in scope.input | required %}
    {% if field.first %}
    { {{ scope.input.prefix }}{{ field.value.param }} = p{{ field.index }}
    {% else %}
    , {{ scope.input.prefix }}{{ field.value.param }} = p{{ field.index }}
    {% endif %}
  {% endfor %}
  {% for field in scope.input.fields %}
    {% if !field.value.required %}
      {% case field.value.type %}
      {% when "map" %}
    , {{ field.key }} = Map.empty
      {% when "list" %}
    , {{ field.key }} = []
      {% else %}
    , {{ field.key }} = Nothing
      {% endcase %}
    {% endif %}
  {% endfor %}
    }
{% else %}
{{ scope.name | lowerFirst }} :: AWS (Either {{ scope.module }}Error {{ scope.name }}Response)
{{ scope.name | lowerFirst }} = undefined {{ scope.name }}
{% endif %}
{% endif %}
