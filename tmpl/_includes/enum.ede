data {{ scope.shape_name }}
{% for branch in scope.enum %}
  {% if branch.first %}
    = {{ scope.shape_name | enumPrefix }}{{ branch.key | enumFormat }}
  {% else %}
    | {{ scope.shape_name | enumPrefix }}{{ branch.key | enumFormat }}
  {% endif %}
{% endfor %}
      deriving (Eq, Ord, Generic)

instance FromText {{ scope.shape_name }} where
{% for branch in scope.enum %}
    fromText "{{ branch.value }}" = Right {{ scope.shape_name | enumPrefix }}{{ branch.key | enumFormat }}
{% endfor %}
    fromText e = failFromText $ "Unrecognised {{ scope.shape_name }}: " <> e

instance Read {{ scope.shape_name }} where
    readsPrec _ = readFromText

instance ToText {{ scope.shape_name }} where
{% for branch in scope.enum %}
    toText {{ scope.shape_name | enumPrefix }}{{ branch.key | enumFormat }} = "{{ branch.value }}"
{% endfor %}

instance Show {{ scope.shape_name }} where
    show = showToText

instance ToQuery {{ scope.shape_name }} where
    toQuery = primToQuery

instance FromXML {{ scope.shape_name }} where
    fromXMLOptions = xmlOptions
    fromXML        = primFromXML

instance ToXML {{ scope.shape_name }} where
    toXMLOptions = xmlOptions
    toXML        = primToXML
